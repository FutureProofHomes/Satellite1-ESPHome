substitutions:
  # Phases of the Voice Assistant
  # IDLE: The voice assistant is ready to be triggered by a wake-word
  voice_assist_idle_phase_id: '1'
  # LISTENING: The voice assistant is ready to listen to a voice command (after being triggered by the wake word)
  voice_assist_listening_phase_id: '2'
  # THINKING: The voice assistant is currently processing the command
  voice_assist_thinking_phase_id: '3'
  # REPLYING: The voice assistant is replying to the command
  voice_assist_replying_phase_id: '4'
  # NOT_READY: The voice assistant is not ready
  voice_assist_not_ready_phase_id: '10'
  # ERROR: The voice assistant encountered an error
  voice_assist_error_phase_id: '11'
  # MUTED: The voice assistant is muted and will not reply to a wake-word
  voice_assist_muted_phase_id: '12'

globals:
  # Global variable tracking the phase of the voice assistant (defined above). Initialized to not_ready
  - id: voice_assistant_phase
    type: int
    restore_value: no
    initial_value: ${voice_assist_not_ready_phase_id}

microphone:
  - platform: satellite1
    id: mic0
    sample_rate: 48000
    i2s_din_pin: GPIO11
    bits_per_sample: 32bit
    i2s_clock_mode: external
    channel: right_left
    pdm: false
    adc_type: external
    gain_log2: 4

micro_wake_word:
  #model: github://esphome/micro-wake-word-models/models/v2/okay_nabu.json 
  models:
    - okay_nabu
  on_wake_word_detected:
    - lambda: id(voice_assistant_phase) = ${voice_assist_listening_phase_id};
    - script.execute: control_leds

switch:
  - platform: template
    name: enable_mww
    id: sw_enable_mww
    optimistic: true
    restore_mode: ALWAYS_OFF
    
    on_turn_on:
      - micro_wake_word.start:
    
    on_turn_off:
    - micro_wake_word.stop: