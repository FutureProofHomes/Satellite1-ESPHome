substitutions:
  #Change to any preferred name
  friendly_name: "Satellite1"  

  #Recommend leaving the following unchanged
  node_name: satellite1-r3
  company_name: FutureProofHomes
  project_name: Satellite1
  component_name: Core
  
  esp32_fw_version: "v2.0.0-alpha.8"
  xmos_fw_version: "v1.0.1-alpha.28"
  built_for_core_hw_version: "v1.0.0-beta.1"
  built_for_hat_hw_version: "v1.0.0-beta.1"


globals:
  # Global initialisation variable. Initialized to true and set to false once everything is connected. Only used to have a smooth "plugging" experience
  - id: init_in_progress
    type: bool
    restore_value: no
    initial_value: 'true'
  # Global variable storing if user action causes warning
  - id: warning
    type: bool
    restore_value: no
    initial_value: 'false'
  # Global variable tracking if the XMOS flash button was recently touched.
  - id: xmos_flashing_started
    type: bool
    restore_value: no
    initial_value: 'false'


esphome:
  name: ${node_name}
  name_add_mac_suffix: true
  friendly_name: ${friendly_name}
  min_version: 2024.10.0
  
  project:
    name: ${company_name}.${project_name}
    version: dev
  
  on_boot:
    - priority: 375
      then:
        # Run the script to refresh the LED status
        - script.execute: control_leds
        - delay: 1s
        
        # If after 10 minutes, the device is still initializing (It did not yet connect to Home Assistant), turn off the init_in_progress variable and run the script to refresh the LED status
        - delay: 10min
        - if:
            condition:
              lambda: return id(init_in_progress);
            then:
              - lambda: id(init_in_progress) = false;
              - script.execute: control_leds
    
    - priority: 600
      then:
        - logger.log: "${company_name} ${project_name} ${component_name} version ${built_for_core_hw_version} running ESP firmware: ${esp32_fw_version} and XMOS firmware: ${xmos_fw_version}"
        - delay: 30s
        - if:
            condition:
              lambda: return id(init_in_progress);
            then:
              - lambda: id(init_in_progress) = false;


logger:
  deassert_rts_dtr: true
  hardware_uart : USB_SERIAL_JTAG
  level: debug



external_components:
  - source:
      type: git
      url: https://github.com/gnumpi/nabu-voice-kit
      ref: dev
    components: [ audio_dac, media_player ]

  - source:
      type: local
      path: ../esphome/components
    components: [ i2s_audio, satellite1, pcm5122, fusb302b, tas2780, udp_stream ]
  
  - source:
      type: git
      url: https://github.com/esphome/voice-kit
      ref: dev
    components: [ microphone, micro_wake_word, voice_assistant ]


#micro_wake_word:
#  id: mww
#  models:
#    - model: hey_jarvis
#      id: hey_jarvis
#    - model: https://github.com/kahrendt/microWakeWord/releases/download/stop/stop.json
#      id: stop
#      internal: true
#  vad:
#  microphone:


microphone:

  - platform: satellite1
    i2s_din_pin: GPIO11
    pdm: false
    sample_rate: 48000
    bits_per_sample: 32bit
    i2s_clock_mode: external
    
    i2s_audio_id: i2s_shared
    channel_0:
      id: asr_mic
      amplify_shift: 6
    channel_1:
      id: comm_mic
      amplify_shift: 6

api:

packages:
  core_board: !include common/core_board.yaml
  wifi: !include common/wifi_improv.yaml
  
  #debug: !include common/debug.yaml

script:
  - id: control_leds
    then:
    

satellite1:
  spi_id: spi_0
  cs_pin: GPIO38
  data_rate: 4000000
  spi_mode: MODE3
  xmos_rst_pin: GPIO12
  flash_sw_pin: GPIO14


i2s_audio:
  - id: i2s_shared
    i2s_lrclk_pin: GPIO07
    i2s_bclk_pin: GPIO08
    i2s_mclk_pin: GPIO09
    access_mode: duplex

audio_dac:
  - platform: pcm5122
    address: 0x4D

#  - platform: tas2780
#    address: 0x38

#fusb302b:
#  id: pd_fusb302b
#  irq_pin: GPIO1
#  request_voltage: 9
#  on_power_ready:
#    then:
#      - logger.log: 
#          format: "PD contract got accepted: %s"
#          args: [ 'id(pd_fusb302b).contract.c_str()' ]
#      - if:
#          condition:
#            lambda: |-
#              return id(pd_fusb302b).contract_voltage >= 9;
#          then:
#            - tas2780.activate:
#  on_disconnect:
#    then:
#      - tas2780.deactivate:


#media_player:
#  - platform: satellite1
#    id: nabu_media_player
#    name: Sat1 Media Player
#    internal: false
#    sample_rate: 48000
#    i2s_dout_pin: GPIO10
#    bits_per_sample: 32bit
#    channel: right_left
#    i2s_audio_id: i2s_shared
#    volume_increment: 0.05
#    volume_min: 0.4
#    volume_max: 0.85



udp_stream:
  microphone: asr_mic

switch:
  - platform: template
    name: Stream Mic via UDP
    id: stream_mic_udp
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    icon: mdi:assistant
    
    on_turn_on:
      - logger.log: "switch udp stream on"
      - udp_stream.start
      
    on_turn_off:
      - logger.log: "switch udp stream off"
      - udp_stream.stop