substitutions:
  #Change to any preferred name
  friendly_name: "Satellite1"  

  #Recommend leaving the following unchanged
  node_name: satellite1-r3
  company_name: FutureProofHomes
  project_name: Satellite1
  component_name: Core
  esp32_fw_version: "v2.0.0-alpha.7"
  xmos_fw_version: "v1.0.1-alpha.27"
  built_with_core_hw_version: "v1.0.0-beta.1"
  built_with_hat_hw_version: "v1.0.0-beta.1"

  #Change to enable/disable debug mode in logs and esp device info 
  #Firmware must be rebuilt and uploaded for changes to take effect
  #TODO: Conditionally setting loggers and debug settings are coming!  https://github.com/esphome/esphome/pull/7604/commits
  debug_enabled: "true"  # Set to "false" to disable debug


packages:
  wifi: !include common/wifi_improv.yaml
  buttons: !include common/buttons.yaml
  media_player: !include common/media_player.yaml
  voice_assistant: !include common/voice_assistant.yaml
  led_ring: !include common/led_ring.yaml
  hat_sensors: !include common/hat_sensors.yaml
  timer: !include common/timer.yaml

  # Enable Deubugging Mode for detailed info and logs
  # debug: !include common/debug.yaml

# packages:
#   wifi: !include common/wifi_improv.yaml
#   sensors: !include common/hat_sensors.yaml
#   buttons: !include common/buttons.yaml
#   vk: !include common/nabu_vk_duplex_r3.yaml
#   va: !include common/va.yaml
#   led_ring: !include 
#     file: common/led_ring.yaml
#     vars:
#       led_ring_platform: satellite1

esphome:
  name: ${node_name}
  min_version: 2024.9.0
  project:
    name: satellite1.voice_assistant_r${built_for_core_hw_version}
    version: dev
  
  on_boot:
    priority: 375
    then:
      # Run the script to refresh the LED status
      - script.execute: control_leds
      - delay: 1s
      
      # If after 10 minutes, the device is still initializing (It did not yet connect to Home Assistant), turn off the init_in_progress variable and run the script to refresh the LED status
      - delay: 10min
      - if:
          condition:
            lambda: return id(init_in_progress);
          then:
            - lambda: id(init_in_progress) = false;
            - script.execute: control_leds

esp32:
  board: esp32-s3-devkitc-1
  variant: ESP32S3
  flash_size: 16MB
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
      CONFIG_ESP32_S3_BOX_BOARD: "y"

logger:
  deassert_rts_dtr: true
  hardware_uart : USB_SERIAL_JTAG
  level: DEBUG

status_led:
  pin: GPIO45

api:
  id: api_id
  on_client_connected:
    - lambda: id(init_in_progress) = false;
    - script.execute: control_leds
  on_client_disconnected:
    - script.execute: control_leds

ota:
  - platform: satellite1
    id: ota_satellite1_xmos

http_request:

i2c:
  - id: bus_a
    sda: GPIO5
    scl: GPIO6
    frequency: 400kHz
    scan: True


spi:
  - id: spi_0
    clk_pin:  GPIO40
    mosi_pin: GPIO39
    miso_pin: GPIO41
    interface: SPI3


satellite1:
  spi_id: spi_0
  cs_pin: GPIO38
  data_rate: 4000000
  spi_mode: MODE3
  xmos_rst_pin: GPIO12
  flash_sw_pin: GPIO14


binary_sensor:
  - platform: gpio
    id: btn_volume_up
    pin:
      satellite1: 
      port: INPUT_A
      pin: 0
      inverted: true
    name: "Volume Up"
    on_press:
      - media_player.volume_up: nabu_media_player
  
  - platform: gpio
    id: btn_volume_down
    pin:
      satellite1: 
      port: INPUT_A
      pin: 2
      inverted: true
    name: "Volume Down"
    on_press:
      - media_player.volume_down: nabu_media_player
  
  - platform: gpio
    id: inp_hw_mute
    pin:
      satellite1: 
      port: INPUT_A
      pin: 3
      inverted: false
    name: "Mics Muted"


light:
  - platform: satellite1
    id: !extend ${led_ring_id}
    name: LED-Ring
